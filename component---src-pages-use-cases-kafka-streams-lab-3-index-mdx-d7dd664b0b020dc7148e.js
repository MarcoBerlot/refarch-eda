(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{"M+yy":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return m}));var a=n("wx14"),i=n("zLVn"),r=(n("q1tI"),n("7ljp")),l=n("013z"),o=(n("qKvR"),{}),c=function(e){return function(t){return console.warn("Component '"+e+"' was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",t)}},b=c("AnchorLinks"),s=c("AnchorLink"),p={_frontmatter:o},u=l.a;function m(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(u,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)(b,{mdxType:"AnchorLinks"},Object(r.b)(s,{mdxType:"AnchorLink"},"Overview"),Object(r.b)(s,{mdxType:"AnchorLink"},"Scenario Prerequisites"),Object(r.b)(s,{mdxType:"AnchorLink"},"Develop the application")),Object(r.b)("h2",null,"Overview"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"In this lab scenario weâ€™re going to use ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://quarkus.io"}),"Quarkus")," to develop the core application with Kafka streams api and microprofile reactive messaging."),Object(r.b)("li",{parentName:"ul"},"We will be testing using ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://kafka.apache.org/documentation/streams/"}),"Apache Kafka Streams")," TestDriver to mimic a Topology, a Stream and Table.")),Object(r.b)("p",null,"The requirements to address are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"consume item sold from items topic, item has unique key. Item event has store information"),Object(r.b)("li",{parentName:"ul"},"compute for each item its current stock cross store"),Object(r.b)("li",{parentName:"ul"},"compute the store stock for each item"),Object(r.b)("li",{parentName:"ul"},"generate inventory event for store - item - stock"),Object(r.b)("li",{parentName:"ul"},"expose APIs to get stock for a store or for an item")),Object(r.b)("h2",null,"Scenario Prerequisites"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Java")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"For the purposes of this lab we suggest Java 11+")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Maven")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Maven will be needed for bootstrapping our application from the command-line and running\nour application.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"An IDE of your choice")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Ideally an IDE that supports Quarkus (such as Visual Studio Code)")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"OpenShift Container Platform")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"v4.4.x")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"IBM Cloud Pak for Integration")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"CP4I2020.2")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"IBM Event Streams")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The section on use with Event Streams on CP4I assumes Event Streams v10. If using a previous version such as ESv2019.4.2, there are some differences to how you would configure ",Object(r.b)("inlineCode",{parentName:"li"},"application.properties")," to establish a connection.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Code Source"),": clone the following git repository: ",Object(r.b)("inlineCode",{parentName:"p"},"git clone https://github.com/ibm-cloud-architecture/refarch-eda-item-inventory")),Object(r.b)("h2",null,"Develop the application"),Object(r.b)("h3",null,"Setting up the Quarkus Application"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"We will bootstrap the Quarkus application with the following Maven command")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'mvn io.quarkus:quarkus-maven-plugin:1.7.2.Final:create \\\n    -DprojectGroupId={com.ibm} \\\n    -DprojectArtifactId={quarkus-kstreams-lab} \\\n    -Dextensions="kafka,kafka-streams,resteasy-jsonb,smallrye-health,smallrye-reactive-messaging-kafka,quarkus-smallrye-openapi,quarkus-kafka-streams,openshift"\n')),Object(r.b)("p",null,"You can replace the fields within {} as you like."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"recall that is if you want to add an extension do something like: ",Object(r.b)("inlineCode",{parentName:"li"},'./mvnw Quarkus:add-extension -Dextensions="kafka"')),Object(r.b)("li",{parentName:"ul"},"Since we will be using the Kafka Streams testing functionality we will need to edit the ",Object(r.b)("inlineCode",{parentName:"li"},"pom.xml")," to add\nthe dependency to our project. Open ",Object(r.b)("inlineCode",{parentName:"li"},"pom.xml")," and add the following.")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<dependency>\n    <groupId>org.apache.kafka</groupId>\n    <artifactId>kafka-streams-test-utils</artifactId>\n    <version>2.5.0</version>\n    <scope>test</scope>\n</dependency>\n")),Object(r.b)("h3",null,"Start the dev mode"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"./mvnw quarkus:dev\n")),Object(r.b)("h2",null,"Define the domain entities"),Object(r.b)("p",null,"Under the ",Object(r.b)("inlineCode",{parentName:"p"},"src/main/java/../domain")," folder add the two classes representing the business entities we are using:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Java"}),'public class Item {\n    public static String RESTOCK = "RESTOCK";\n    public static String SALE = "SALE";\n    public String storeName;\n    public String sku;\n    public int quantity;\n    public String type;\n    public Double price;\n    public String timestamp;\n\n    public Item(){}\n}\n')),Object(r.b)("p",null,"This item will also being used for event structure on ",Object(r.b)("inlineCode",{parentName:"p"},"items")," topic. The type attribute is to specify if this is a sale event or a restock event."),Object(r.b)("p",null,"The inventory per store includes a map of item.sku and quantity."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-Java"}),"public class Inventory {\n    public String storeName;\n    public HashMap<String,Long> stock = new HashMap<String,Long>();\n    public Inventory(){}\n}\n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-use-cases-kafka-streams-lab-3-index-mdx-d7dd664b0b020dc7148e.js.map