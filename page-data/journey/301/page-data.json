{"componentChunkName":"component---src-pages-journey-301-index-mdx","path":"/journey/301/","result":{"pageContext":{"frontmatter":{"title":"Learning Journey - Be an expert (301 content)","description":"Learning more about Event Streams and Event Driven Solution"},"relativePagePath":"/journey/301/index.mdx","titleType":"append","MdxNode":{"id":"696ec473-546d-58ea-a7cd-d8aeeaabf218","children":[],"parent":"3de6b094-7ce4-57c9-b48c-b9c87ba13753","internal":{"content":"---\ntitle: Learning Journey - Be an expert (301 content)\ndescription: Learning more about Event Streams and Event Driven Solution\n---\n\nIn this article we are presenting mor advanced concepts and practices for developers\nand operations.\n\n## Security review - RBAC\n## Producer advanced\n\nIn [this section](/technology/kafka-producers/#advanced-producer-discussion), we address how to support exactly once delivery\nbetween producer and consumer, discuss about idempotence and avoid getting duplicate messages from the producer. \n\n## Consumer Advanced \n\n\n## Design patterns \n\nEvent-driven solutions are based on a set of design pattern for application design.\n\n[This article](/patterns/intro/) presents the most common ones.\n\n\n## Adoption Domain Driven Design\n\n## Reactive system\n\nWe have introduction and overview of why Reactive Manifesto is important and the supporting technologies, in [this article](/advantages/reactive/).\n\n## Quarkus Reactive Messaging\n## Doing data processing with Flink \n## Always-On\n## Monitoring\n## Governance \n","type":"Mdx","contentDigest":"d40791b8860dcebb9b703814f0a21088","owner":"gatsby-plugin-mdx","counter":776},"frontmatter":{"title":"Learning Journey - Be an expert (301 content)","description":"Learning more about Event Streams and Event Driven Solution"},"exports":{},"rawBody":"---\ntitle: Learning Journey - Be an expert (301 content)\ndescription: Learning more about Event Streams and Event Driven Solution\n---\n\nIn this article we are presenting mor advanced concepts and practices for developers\nand operations.\n\n## Security review - RBAC\n## Producer advanced\n\nIn [this section](/technology/kafka-producers/#advanced-producer-discussion), we address how to support exactly once delivery\nbetween producer and consumer, discuss about idempotence and avoid getting duplicate messages from the producer. \n\n## Consumer Advanced \n\n\n## Design patterns \n\nEvent-driven solutions are based on a set of design pattern for application design.\n\n[This article](/patterns/intro/) presents the most common ones.\n\n\n## Adoption Domain Driven Design\n\n## Reactive system\n\nWe have introduction and overview of why Reactive Manifesto is important and the supporting technologies, in [this article](/advantages/reactive/).\n\n## Quarkus Reactive Messaging\n## Doing data processing with Flink \n## Always-On\n## Monitoring\n## Governance \n","fileAbsolutePath":"/home/runner/work/refarch-eda/refarch-eda/docs/src/pages/journey/301/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}