{"componentChunkName":"component---src-pages-journey-101-index-mdx","path":"/journey/101/","result":{"pageContext":{"frontmatter":{"title":"Learning Journey - getting started (101 content)","description":"Learning the Basic of Event Streams, Event Driven Solution"},"relativePagePath":"/journey/101/index.mdx","titleType":"append","MdxNode":{"id":"d684cf47-f701-5a19-8096-3f302419368d","children":[],"parent":"da5ecd45-dabb-52bc-93fa-f64ed5c2eead","internal":{"content":"---\ntitle: Learning Journey - getting started (101 content)\ndescription: Learning the Basic of Event Streams, Event Driven Solution\n---\n\nThis chapter is to get you understanding what is Event-Driven architecture,\nwhat is Kafka, how to consider Messaging as a service as a foundations for\nevent-driven solution, and getting started on Event Streams and MQ.\n\n<AnchorLinks>\n  <AnchorLink>Important concepts around Event-driven solution and Event-driven architecture</AnchorLink>\n  <AnchorLink>Use Cases</AnchorLink>\n  <AnchorLink>Why microservices are becoming event-driven and why we should care?</AnchorLink>\n  <AnchorLink>Messaging as a service?</AnchorLink>\n  <AnchorLink>Understand Kafka technology</AnchorLink>\n  <AnchorLink>So what is Event Streams?</AnchorLink>\n  <AnchorLink>Fit for purpose</AnchorLink>\n  <AnchorLink>Frequently asked questions</AnchorLink>\n</AnchorLinks>\n\n## Important concepts around Event-driven solution and Event-driven architecture\n\nThe [term and definitions](http://localhost:8000/concepts/terms-and-definitions/) try to get\na clear definitions for events, event streams, event backbone, event sources....\n\nThe main [reference architecture presentation is in this section](/introduction/reference-architecture/#event-driven-architecture).\n\n ![hl-arch-ra](../../images/hl-arch-ra.png)\n\nWith a review of the [main technical use cases]() that cover most of the current business use cases.\n\n## Use Cases\n\nWe have different level of use cases in this repository: \n\nThe generic use cases which are the main drivers for EDA adoption are [summarized here](/introduction/usecases/). \n\nAnd some reference implementations to illustrate the major EDA design patterns:\n\n| Scenario                           | Description         | Link        |\n| --------------------------------| ------------------  |:----------- |\n| Shipping fresh food over sea _(external)_ | The EDA solution implementation using event driven microservices in different language, and demonstrating different design patterns. | [EDA reference implementation solution](https://ibm-cloud-architecture.github.io/refarch-kc/)|\n| Vaccine delivery at scale _(external)_ | An EDA and cross cloud pak solution | [Vaccine delivery at scale](https://ibm-cloud-architecture.github.io/vaccine-solution-main/)\n| Real time anomaly detection _(external)_ | Develop and apply machine learning predictive model on event streams | [Refrigerator container anomaly detection solution](https://ibm-cloud-architecture.github.io/refarch-reefer-ml/)|\n\n\n## Why microservices are becoming event-driven and why we should care?\n\nThere is a section to explain why microservices are becoming event-driven. \n\n## Messaging as a service? \n\nYes EDA is not just Kafka, IBM MQ and Kafka should be part of any serious EDA deployment.\n\n## Understand Kafka technology\n\nYou may want to read from the [Kafka] documentation](https://kafka.apache.org/documentation/#intro_nutshell) to understand the main concepts, but we have\nalso summarized those into [this chapter](/technology/kafka-overview/) and if you like quick \nvideo, here is a seven minutes review of what Kafka is:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/aj9CDZm0Glc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nThe major building blocks are summarized in this diagram:\n\n![](./images/kafka-components.png)\n\nTo learn more about:\n\n* Kafka Cluster see [this 101 content](/technology/kafka-overview/#kafka-components)\n* For Producer introduction [see this section]()\n* For Consumer introduction with consumer group concepts [see this section]()\n* For [Kafka Connector framework introduction]()\n\n## So what is Event Streams?\n\nEvent Streams is IBM packaging of Kafka with some enhanced features, and available as [Managed Service](https://www.ibm.com/cloud/event-streams)\nor as part of Cloud Pak for integration. [Here is a developer.ibm.com article for Event Streams on Cloud](https://developer.ibm.com/articles/event-streams-fundamentals/?mhsrc=ibmsearch_a&mhq=ibm%20event%20streams).\n\nThe product documentation as part of cloud pak for integration is [here]().\n\n### Event streams resource requirements\n\nSee the [detailed tables](https://ibm.github.io/event-streams/installing/prerequisites/#helm-resource-requirements) in the product documentation.\n\n## Fit for purpose\n\nWe have a [general fit for purpose document](/concepts/fit-to-purpose/) that can help you reviewing message versus events,\nMQ versus Kafka, but also Kafka Streams versus Apache Flink.\n\n## Getting Started With Event Streams\n\nThe most easy way to start is to create a Event Streams on IBM Cloud service, and then connect\na starter application.\n\nDeveloper who wants to start quickly and run a local simple cluster, can use docker compose to start a simple\nKafka broker and zookeeper. We have developed such compose file in different project\nbut we have centralize it in [this gitops project](https://github.com/ibm-cloud-architecture/eda-gitops-catalog) under\nthe `RunLocally` folder.\n\nFinally if you have access to an OpenShift Cluster, version 4.7 + we can deploy \nEvent Streams as part of IBM Cloud Pak for Integration very easily using the\nOpenShift Admin console, and we did a simple [step by step tutorial here]() \nor use our gitops catalog and the following procedure.\n\nIf you want to adopt an pure GitOps approach we have demonstrated how to use\nArgoCD (OpenShift GitOps) to deploy an Event Streams cluster and maintain it states.  \n\n\n\n\n## Frequently asked questions\n\nA [separate FAQ document](/technology/faq) groups the most common questions around Kafka.","type":"Mdx","contentDigest":"0de4b10e720c15eae0e14e05671876eb","owner":"gatsby-plugin-mdx","counter":772},"frontmatter":{"title":"Learning Journey - getting started (101 content)","description":"Learning the Basic of Event Streams, Event Driven Solution"},"exports":{},"rawBody":"---\ntitle: Learning Journey - getting started (101 content)\ndescription: Learning the Basic of Event Streams, Event Driven Solution\n---\n\nThis chapter is to get you understanding what is Event-Driven architecture,\nwhat is Kafka, how to consider Messaging as a service as a foundations for\nevent-driven solution, and getting started on Event Streams and MQ.\n\n<AnchorLinks>\n  <AnchorLink>Important concepts around Event-driven solution and Event-driven architecture</AnchorLink>\n  <AnchorLink>Use Cases</AnchorLink>\n  <AnchorLink>Why microservices are becoming event-driven and why we should care?</AnchorLink>\n  <AnchorLink>Messaging as a service?</AnchorLink>\n  <AnchorLink>Understand Kafka technology</AnchorLink>\n  <AnchorLink>So what is Event Streams?</AnchorLink>\n  <AnchorLink>Fit for purpose</AnchorLink>\n  <AnchorLink>Frequently asked questions</AnchorLink>\n</AnchorLinks>\n\n## Important concepts around Event-driven solution and Event-driven architecture\n\nThe [term and definitions](http://localhost:8000/concepts/terms-and-definitions/) try to get\na clear definitions for events, event streams, event backbone, event sources....\n\nThe main [reference architecture presentation is in this section](/introduction/reference-architecture/#event-driven-architecture).\n\n ![hl-arch-ra](../../images/hl-arch-ra.png)\n\nWith a review of the [main technical use cases]() that cover most of the current business use cases.\n\n## Use Cases\n\nWe have different level of use cases in this repository: \n\nThe generic use cases which are the main drivers for EDA adoption are [summarized here](/introduction/usecases/). \n\nAnd some reference implementations to illustrate the major EDA design patterns:\n\n| Scenario                           | Description         | Link        |\n| --------------------------------| ------------------  |:----------- |\n| Shipping fresh food over sea _(external)_ | The EDA solution implementation using event driven microservices in different language, and demonstrating different design patterns. | [EDA reference implementation solution](https://ibm-cloud-architecture.github.io/refarch-kc/)|\n| Vaccine delivery at scale _(external)_ | An EDA and cross cloud pak solution | [Vaccine delivery at scale](https://ibm-cloud-architecture.github.io/vaccine-solution-main/)\n| Real time anomaly detection _(external)_ | Develop and apply machine learning predictive model on event streams | [Refrigerator container anomaly detection solution](https://ibm-cloud-architecture.github.io/refarch-reefer-ml/)|\n\n\n## Why microservices are becoming event-driven and why we should care?\n\nThere is a section to explain why microservices are becoming event-driven. \n\n## Messaging as a service? \n\nYes EDA is not just Kafka, IBM MQ and Kafka should be part of any serious EDA deployment.\n\n## Understand Kafka technology\n\nYou may want to read from the [Kafka] documentation](https://kafka.apache.org/documentation/#intro_nutshell) to understand the main concepts, but we have\nalso summarized those into [this chapter](/technology/kafka-overview/) and if you like quick \nvideo, here is a seven minutes review of what Kafka is:\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/aj9CDZm0Glc\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nThe major building blocks are summarized in this diagram:\n\n![](./images/kafka-components.png)\n\nTo learn more about:\n\n* Kafka Cluster see [this 101 content](/technology/kafka-overview/#kafka-components)\n* For Producer introduction [see this section]()\n* For Consumer introduction with consumer group concepts [see this section]()\n* For [Kafka Connector framework introduction]()\n\n## So what is Event Streams?\n\nEvent Streams is IBM packaging of Kafka with some enhanced features, and available as [Managed Service](https://www.ibm.com/cloud/event-streams)\nor as part of Cloud Pak for integration. [Here is a developer.ibm.com article for Event Streams on Cloud](https://developer.ibm.com/articles/event-streams-fundamentals/?mhsrc=ibmsearch_a&mhq=ibm%20event%20streams).\n\nThe product documentation as part of cloud pak for integration is [here]().\n\n### Event streams resource requirements\n\nSee the [detailed tables](https://ibm.github.io/event-streams/installing/prerequisites/#helm-resource-requirements) in the product documentation.\n\n## Fit for purpose\n\nWe have a [general fit for purpose document](/concepts/fit-to-purpose/) that can help you reviewing message versus events,\nMQ versus Kafka, but also Kafka Streams versus Apache Flink.\n\n## Getting Started With Event Streams\n\nThe most easy way to start is to create a Event Streams on IBM Cloud service, and then connect\na starter application.\n\nDeveloper who wants to start quickly and run a local simple cluster, can use docker compose to start a simple\nKafka broker and zookeeper. We have developed such compose file in different project\nbut we have centralize it in [this gitops project](https://github.com/ibm-cloud-architecture/eda-gitops-catalog) under\nthe `RunLocally` folder.\n\nFinally if you have access to an OpenShift Cluster, version 4.7 + we can deploy \nEvent Streams as part of IBM Cloud Pak for Integration very easily using the\nOpenShift Admin console, and we did a simple [step by step tutorial here]() \nor use our gitops catalog and the following procedure.\n\nIf you want to adopt an pure GitOps approach we have demonstrated how to use\nArgoCD (OpenShift GitOps) to deploy an Event Streams cluster and maintain it states.  \n\n\n\n\n## Frequently asked questions\n\nA [separate FAQ document](/technology/faq) groups the most common questions around Kafka.","fileAbsolutePath":"/home/runner/work/refarch-eda/refarch-eda/docs/src/pages/journey/101/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}