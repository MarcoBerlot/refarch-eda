(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{jTru:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n("wx14"),o=n("zLVn"),r=(n("q1tI"),n("7ljp")),l=n("013z"),i=(n("qKvR"),{}),p={_frontmatter:i},c=l.a;function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(c,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"We are presenting in this note how to get development and deployment environments to start developing Event Driven microservice solution. We assume OpensShift deployment and at first Java as the main programming language."),Object(r.b)("h2",null,"Infrastructure for dev integration test"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"OpenShift"),Object(r.b)("li",{parentName:"ul"},"cloud pak operators",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Add ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.ibm.com/support/knowledgecenter/SSGT7J_20.2/install/install_online_catalog_sources.html"}),"IBM Common Services opertors")," "),Object(r.b)("li",{parentName:"ul"},"Add the IBM operators to the list of installable operators. Same product note as above."),Object(r.b)("li",{parentName:"ul"},"Get ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.ibm.com/support/knowledgecenter/SSGT7J_20.2/install/entitlement_key.html"}),"entitlement key")))),Object(r.b)("li",{parentName:"ul"},"cloud pak for integration",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Install Cloud pak for integration operator using the Operator hub catalog"),Object(r.b)("li",{parentName:"ul"},"Install Cloud pak for integration platform navigator from the operator hub catalog"),Object(r.b)("li",{parentName:"ul"},"The previous steps should have installed the common services if they were not install before. So get the admin password via the ",Object(r.b)("inlineCode",{parentName:"li"},"platform-auth-idp-credentials")," secret in the ",Object(r.b)("inlineCode",{parentName:"li"},"ibm-common-services")," project. ",Object(r.b)("inlineCode",{parentName:"li"}," oc get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 --decode")))),Object(r.b)("li",{parentName:"ul"},"cloud pak for application")),Object(r.b)("h3",null,"Deploy event streams"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"The instructions are in the [product documentation](https://www.ibm.com/support/knowledgecenter/SSGT7J_20.2/install/install_event_streams.html), and are very simple using the IBM Event Streams operator. Select minimal configuration with persistence. Here is an example of yaml\n\n```yaml\n\n```\n")),Object(r.b)("h3",null,"Deploy Strimzi"),Object(r.b)("h2",null,"Java Developer environment"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Go with ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"http://quarkus.io"}),"Quarkus")," so all being set with maven plugin."),Object(r.b)("li",{parentName:"ul"},"Kafka Strimzi image for docker and docker-compose to get up and running quikcly. We have different docker composes files for you to start with:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"One Broker, one Zookeeper, kafka 2.5")))),Object(r.b)("h2",null,"Python Developer environment"))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-technology-index-mdx-f4749190e5bbe8bb25cb.js.map