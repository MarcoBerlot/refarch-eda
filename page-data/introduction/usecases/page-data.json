{"componentChunkName":"component---src-pages-introduction-usecases-index-mdx","path":"/introduction/usecases/","result":{"pageContext":{"frontmatter":{"title":"Generic Business Use Cases","description":"EDA Classical Technical Use Cases"},"relativePagePath":"/introduction/usecases/index.mdx","titleType":"append","MdxNode":{"id":"a1dfbe73-d632-5b08-97f9-cfc9b69ff535","children":[],"parent":"7316b5ed-1652-5fec-8eb8-07b77503ab0b","internal":{"content":"---\ntitle: Generic Business Use Cases\ndescription: EDA Classical Technical Use Cases\n---\n\nThe adoption of event-driven architecture is based four main technical drivers:\n\n![](./images/4-usecases.png)\n\n* Communication layer:  \n\n  * Adopt messaging and asynchronous communication between applications and \nmicroservices for loosely coupled services (See [this note](https://ibm-cloud-architecture.github.io/refarch-integration/service-mesh/readme/#asynchronous-loosely-coupled-solution-using-events) where we present a way to support a service mesh solution using asynchronous event).\nThe data are pushed as immutables record, or commands are sent with exactly once delivery. Reducing pull data approach. \n  * Pub/sub messaging for cloud native applications to improve communication inter microservices.\n  * Support Always-on services with asynchronous data replication.\n  * Expose data to any application to consume.\n\n* Reactive systems: to support reactive, responsive applications for addressing\nresiliency, scaling so adopting message buses.\n\n* Data Agility:\n\n  * Centralize online data pipeline to decouple applications and microservices.\n  * Monitor distributed applications to produce centralized feed of operational data.\n  * Logs collector from multiple services.\n  * Implement [event sourcing pattern](/patterns/event-sourcing/) out of the box, using configuration to keep message for a long time period. Data are replicated between brokers within the cluster and cross availability zones if needed.\n\n* Near real-time analytics insights:\n  * Aggregation of event coming from multiple producers.\n  * Look at event sequencing patterns\n  * Compute next best action from event streams\n\n\n","type":"Mdx","contentDigest":"466486f8bc5632608a50bba8a43dc8d7","owner":"gatsby-plugin-mdx","counter":832},"frontmatter":{"title":"Generic Business Use Cases","description":"EDA Classical Technical Use Cases"},"exports":{},"rawBody":"---\ntitle: Generic Business Use Cases\ndescription: EDA Classical Technical Use Cases\n---\n\nThe adoption of event-driven architecture is based four main technical drivers:\n\n![](./images/4-usecases.png)\n\n* Communication layer:  \n\n  * Adopt messaging and asynchronous communication between applications and \nmicroservices for loosely coupled services (See [this note](https://ibm-cloud-architecture.github.io/refarch-integration/service-mesh/readme/#asynchronous-loosely-coupled-solution-using-events) where we present a way to support a service mesh solution using asynchronous event).\nThe data are pushed as immutables record, or commands are sent with exactly once delivery. Reducing pull data approach. \n  * Pub/sub messaging for cloud native applications to improve communication inter microservices.\n  * Support Always-on services with asynchronous data replication.\n  * Expose data to any application to consume.\n\n* Reactive systems: to support reactive, responsive applications for addressing\nresiliency, scaling so adopting message buses.\n\n* Data Agility:\n\n  * Centralize online data pipeline to decouple applications and microservices.\n  * Monitor distributed applications to produce centralized feed of operational data.\n  * Logs collector from multiple services.\n  * Implement [event sourcing pattern](/patterns/event-sourcing/) out of the box, using configuration to keep message for a long time period. Data are replicated between brokers within the cluster and cross availability zones if needed.\n\n* Near real-time analytics insights:\n  * Aggregation of event coming from multiple producers.\n  * Look at event sequencing patterns\n  * Compute next best action from event streams\n\n\n","fileAbsolutePath":"/home/runner/work/refarch-eda/refarch-eda/docs/src/pages/introduction/usecases/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}