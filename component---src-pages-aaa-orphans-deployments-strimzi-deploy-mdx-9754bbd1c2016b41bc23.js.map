{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/aaa_ORPHANS/deployments/strimzi/deploy.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-aaa-orphans-deployments-strimzi-deploy-mdx-9754bbd1c2016b41bc23.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-eda/refarch-eda/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://strimzi.io/\"\n      }}>{`Strimzi`}</a>{` uses the Cluster Operator to deploy and manage Kafka (including Zookeeper) and Kafka Connect clusters. When the Cluster Operator is up, it starts to watch for certain OpenShift or Kubernetes resources containing the desired Kafka or Kafka Connect cluster configuration.`}</p>\n    <h2>{`Create a namespace or openshift project`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl create namespace kafka-strimzi\n\noc create project kafka-strimzi\n`}</code></pre>\n    <h2>{`Download the strimzi artefacts`}</h2>\n    <p>{`For the last `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/strimzi/strimzi-kafka-operator/releases\"\n      }}>{`release github`}</a>{`. Then modify the Role binding yaml files with the namespace set in previous step.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`sed -i '' 's/namespace: .*/namespace: kafka-strimzi/' install/cluster-operator/*RoleBinding*.yaml\n`}</code></pre>\n    <h2>{`Define Custom Resource Definition for kafka`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc apply -f install/cluster-operator/ -n jb-kafka-strimzi\n`}</code></pre>\n    <p>{`This should create the following resources:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Names`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Resource`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-cluster-operator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Service account`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get sa`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-cluster-operator-entity-operator-delegation, strimzi-cluster-operator, strimzi-cluster-operator-topic-operator-delegation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Role binding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get rolebinding`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-cluster-operator-global, strimzi-cluster-operator-namespaced, strimzi-entity-operator, strimzi-kafka-broker, strimzi-topic-operator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Cluster Role`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get clusterrole`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-cluster-operator, strimzi-cluster-operator-kafka-broker-delegation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Cluster Role Binding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get clusterrolebinding`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`kafkabridges, kafkaconnectors, kafkaconnects, kafkamirrormaker2s kafka, kafkatopics, kafkausers`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Custom Resource Definition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get customresourcedefinition`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`Deploy Kafka cluster`}</h2>\n    <p>{`Change the name of the cluster in one the yaml in the `}<inlineCode parentName=\"p\">{`examples/kafka`}</inlineCode>{` folder.`}</p>\n    <p>{`Using non presistence:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc apply -f examples/kafka/kafka-ephemeral.yaml -n jb-kafka-strimzi\noc get kafka\n# NAME         DESIRED KAFKA REPLICAS   DESIRED ZK REPLICAS\n# my-cluster   3                        3\n# Or\nkubectl  apply -f examples/kafka/kafka-ephemeral.yaml -n jb-kafka-strimzi\n`}</code></pre>\n    <p>{`When looking at the pods running we can see the three kafka and zookeeper nodes, but also an entity operator pod.`}</p>\n    <p>{`Using persistence:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc apply -f examples/kafka/kafka-persistent.yaml -n jb-kafka-strimzi\n`}</code></pre>\n    <h2>{`Topic Operator`}</h2>\n    <p>{`The role of the `}<inlineCode parentName=\"p\">{`Topic Operator`}</inlineCode>{` is to keep a set of KafkaTopic OpenShift or Kubernetes resources describing Kafka topics in-sync with corresponding Kafka topics.`}</p>\n    <h3>{`Deploy the operator`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc apply -f install/topic-operator/ -n jb-kafka-strimzi\n`}</code></pre>\n    <p>{`This will add the following:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Names`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Resource`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-topic-operator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Service account`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get sa`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`strimzi-topic-operator`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Role binding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get rolebinding`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`kafkatopics`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Custom Resource Definition`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`oc get customresourcedefinition`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3>{`Create a topic`}</h3>\n    <p>{`Edit a yaml file like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: kafka.strimzi.io/v1beta1\nkind: KafkaTopic\nmetadata:\n  name: test\n  labels:\n    strimzi.io/cluster: my-cluster\nspec:\n  partitions: 1\n  replicas: 3\n  config:\n    retention.ms: 7200000\n    segment.bytes: 1073741824\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc apply -f test.yaml -n jb-kafka-strimzi\n\noc get kafkatopics\n`}</code></pre>\n    <p>{`This creates a topic `}<inlineCode parentName=\"p\">{`test`}</inlineCode>{` in your kafka cluster.`}</p>\n    <h2>{`Test with producer and consumer pods`}</h2>\n    <p>{`Use kafka-consumer and producer tools from Kafka distribution. Verify within Dockerhub under the Strimzi account to get the lastest image tag (below we use -2.4.0 tag).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Start a consumer on test topic\n\noc run kafka-consumer -ti --image=strimzi/kafka:latest-kafka-2.4.0 --rm=true --restart=Never -- bin/kafka-console-consumer.sh --bootstrap-server my-cluster-kafka-bootstrap:9092 --topic test --from-beginning\n# Start a text producer\noc run kafka-producer -ti --image=strimzi/kafka:latest-kafka-2.4.0  --rm=true --restart=Never -- bin/kafka-console-producer.sh --broker-list my-cluster-kafka-bootstrap:9092 --topic test\n# enter text\n`}</code></pre>\n    <p>{`If you want to use the strimzi kafka docker image to run the above scripts locally but remotely connect to a kafka cluster you need multiple things to happen:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Be sure the kafka yaml file include the external route stamza:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  kafka:\n    version: 2.4.0\n    replicas: 3\n    listeners:\n      plain: {}\n      tls: {}\n      external:\n        type: route\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Get the host ip address from the Route resource`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc get routes my-cluster-kafka-bootstrap -o=jsonpath='{.status.ingress[0].host}{\"\\\\n\"}'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Get the TLS certificate from the broker`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`oc get secrets\noc extract secret/my-cluster-cluster-ca-cert --keys=ca.crt --to=- > ca.crt\n# transform it fo java truststore\nkeytool -import -trustcacerts -alias root -file ca.crt -keystore truststore.jks -storepass password -noprompt\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Start the docker container by mounting the local folder with the truststore.jks to the `}<inlineCode parentName=\"li\">{`/home`}</inlineCode></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`docker run -ti -v $(pwd):/home strimzi/kafka:latest-kafka-2.4.0  bash\n# inside the container uses the consumer tool\nbash-4.2$ cd /opt/kafka/bin\nbash-4.2$ ./kafka-console-consumer.sh --bootstrap-server  my-cluster-kafka-bootstrap-jb-kafka-strimzi.gse-eda-demos-fa9ee67c9ab6a7791435450358e564cc-0001.us-east.containers.appdomain.cloud:443 --consumer-property security.protocol=SSL --consumer-property ssl.truststore.password=password --consumer-property ssl.truststore.location=/home/truststore.jks --topic test --from-beginning\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`For a producer the approach is the same but using the producer properties:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`./kafka-console-producer.sh --broker-list  my-cluster-kafka-bootstrap-jb-kafka-strimzi.gse-eda-demos-fa9ee67c9ab6a7791435450358e564cc-0001.us-east.containers.appdomain.cloud:443 --producer-property security.protocol=SSL --producer-property ssl.truststore.password=password --producer-property ssl.truststore.location=/home/truststore.jks --topic test   \n`}</code></pre>\n    <p>{`Those properties can be in file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`bootstrap.servers=my-cluster-kafka-bootstrap-jb-kafka-strimzi.gse-eda-demos-fa9ee67c9ab6a7791435450358e564cc-0001.us-east.containers.appdomain.cloud\nsecurity.protocol=SSL\nssl.truststore.password=password\nssl.truststore.location=/home/truststore.jks\n`}</code></pre>\n    <p>{`and then use the following parameters in the command line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./kafka-console-producer.sh --broker-list my-cluster-kafka-bootstrap-jb-kafka-strimzi.gse-eda-demos-fa9ee67c9ab6a7791435450358e564cc-0001.us-east.containers.appdomain.cloud:443 --producer.config /home/strimzi.properties --topic test\n\n./kafka-console-consumer.sh --bootstrap-server my-cluster-kafka-bootstrap-jb-kafka-strimzi.gse-eda-demos-fa9ee67c9ab6a7791435450358e564cc-0001.us-east.containers.appdomain.cloud:443  --topic test  --consumer.config /home/strimzi.properties --from-beginning \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}